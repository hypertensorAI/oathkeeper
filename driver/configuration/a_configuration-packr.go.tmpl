// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package configuration

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	_ = packr.PackJSONBytes("schemas", "authenticators.anonymous.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRoZW50aWNhdG9ycy5hbm9ueW1vdXMuc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAidGl0bGUiOiAiQW5vbnltb3VzIEF1dGhlbnRpY2F0b3IgQ29uZmlndXJhdGlvbiIsCiAgImRlc2NyaXB0aW9uIjogIlRoaXMgc2VjdGlvbiBpcyBvcHRpb25hbCB3aGVuIHRoZSBhdXRoZW50aWNhdG9yIGlzIGRpc2FibGVkLiIsCiAgInByb3BlcnRpZXMiOiB7CiAgICAic3ViamVjdCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInRpdGxlIjogIkFub255bW91cyBTdWJqZWN0IiwKICAgICAgImV4YW1wbGVzIjogWwogICAgICAgICJndWVzdCIsCiAgICAgICAgImFub24iLAogICAgICAgICJhbm9ueW1vdXMiLAogICAgICAgICJ1bmtub3duIgogICAgICBdLAogICAgICAiZGVmYXVsdCI6ICJhbm9ueW1vdXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiU2V0cyB0aGUgYW5vbnltb3VzIHVzZXJuYW1lLiIKICAgIH0KICB9LAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "authenticators.cookie_session.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRoZW50aWNhdG9ycy5jb29raWVfc2Vzc2lvbi5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJ0aXRsZSI6ICJDb29raWUgU2Vzc2lvbiBBdXRoZW50aWNhdG9yIENvbmZpZ3VyYXRpb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGlzIHNlY3Rpb24gaXMgb3B0aW9uYWwgd2hlbiB0aGUgYXV0aGVudGljYXRvciBpcyBkaXNhYmxlZC4iLAogICJwcm9wZXJ0aWVzIjogewogICAgImNoZWNrX3Nlc3Npb25fdXJsIjogewogICAgICAidGl0bGUiOiAiU2Vzc2lvbiBDaGVjayBVUkwiLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogInVyaSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgb3JpZ2luIHRvIHByb3h5IHJlcXVlc3RzIHRvLiBJZiB0aGUgcmVzcG9uc2UgaXMgYSAyMDAgd2l0aCBib2R5IGB7IFwic3ViamVjdFwiOiBcIi4uLlwiLCBcImV4dHJhXCI6IHt9IH1gLiBUaGUgcmVxdWVzdCB3aWxsIHBhc3MgdGhlIHN1YmplY3QgdGhyb3VnaCBzdWNjZXNzZnVsbHksIG90aGVyd2lzZSBpdCB3aWxsIGJlIG1hcmtlZCBhcyB1bmF1dGhvcml6ZWQuXG5cbj5JZiB0aGlzIGF1dGhlbnRpY2F0b3IgaXMgZW5hYmxlZCwgdGhpcyB2YWx1ZSBpcyByZXF1aXJlZC4iLAogICAgICAiZXhhbXBsZXMiOiBbCiAgICAgICAgImh0dHBzOi8vc2Vzc2lvbi1zdG9yZS1ob3N0IgogICAgICBdCiAgICB9LAogICAgIm9ubHkiOiB7CiAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgIml0ZW1zIjogewogICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJ0aXRsZSI6ICJPbmx5IENvb2tpZXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiQSBsaXN0IG9mIHBvc3NpYmxlIGNvb2tpZXMgdG8gbG9vayBmb3Igb24gaW5jb21pbmcgcmVxdWVzdHMsIGFuZCB3aWxsIGZhbGx0aHJvdWdoIHRvIHRoZSBuZXh0IGF1dGhlbnRpY2F0b3IgaWYgbm9uZSBvZiB0aGUgcGFzc2VkIGNvb2tpZXMgYXJlIHNldCBvbiB0aGUgcmVxdWVzdC4iCiAgICB9LAogICAgInByZXNlcnZlX3BhdGgiOiB7CiAgICAgICJ0aXRsZSI6ICJQcmVzZXJ2ZSBQYXRoIiwKICAgICAgInR5cGUiOiAiYm9vbGVhbiIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJXaGVuIHNldCB0byB0cnVlLCBhbnkgcGF0aCBzcGVjaWZpZWQgaW4gYGNoZWNrX3Nlc3Npb25fdXJsYCB3aWxsIGJlIHByZXNlcnZlZCBpbnN0ZWFkIG9mIG92ZXJ3cml0aW5nIHRoZSBwYXRoIHdpdGggdGhlIHBhdGggZnJvbSB0aGUgb3JpZ2luYWwgcmVxdWVzdCIKICAgIH0KICB9LAogICJyZXF1aXJlZCI6IFsKICAgICJjaGVja19zZXNzaW9uX3VybCIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "authenticators.jwt.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRoZW50aWNhdG9ycy5qd3Quc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAidGl0bGUiOiAiSldUIEF1dGhlbnRpY2F0b3IgQ29uZmlndXJhdGlvbiIsCiAgImRlc2NyaXB0aW9uIjogIlRoaXMgc2VjdGlvbiBpcyBvcHRpb25hbCB3aGVuIHRoZSBhdXRoZW50aWNhdG9yIGlzIGRpc2FibGVkLiIsCiAgInByb3BlcnRpZXMiOiB7CiAgICAicmVxdWlyZWRfc2NvcGUiOiB7CiAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgInRpdGxlIjogIlJlcXVpcmVkIFRva2VuIFNjb3BlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkFuIGFycmF5IG9mIE9BdXRoIDIuMCBzY29wZXMgdGhhdCBhcmUgcmVxdWlyZWQgd2hlbiBhY2Nlc3NpbmcgYW4gZW5kcG9pbnQgcHJvdGVjdGVkIGJ5IHRoaXMgaGFuZGxlci5cbiBJZiB0aGUgdG9rZW4gdXNlZCBpbiB0aGUgQXV0aG9yaXphdGlvbiBoZWFkZXIgZGlkIG5vdCByZXF1ZXN0IHRoYXQgc3BlY2lmaWMgc2NvcGUsIHRoZSByZXF1ZXN0IGlzIGRlbmllZC4iLAogICAgICAiaXRlbXMiOiB7CiAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICB9CiAgICB9LAogICAgInRhcmdldF9hdWRpZW5jZSI6IHsKICAgICAgInRpdGxlIjogIkludGVuZGVkIEF1ZGllbmNlIiwKICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAiZGVzY3JpcHRpb24iOiAiQW4gYXJyYXkgb2YgYXVkaWVuY2VzIHRoYXQgYXJlIHJlcXVpcmVkIHdoZW4gYWNjZXNzaW5nIGFuIGVuZHBvaW50IHByb3RlY3RlZCBieSB0aGlzIGhhbmRsZXIuXG4gSWYgdGhlIHRva2VuIHVzZWQgaW4gdGhlIEF1dGhvcml6YXRpb24gaGVhZGVyIGlzIG5vdCBpbnRlbmRlZCBmb3IgYW55IG9mIHRoZSByZXF1ZXN0ZWQgYXVkaWVuY2VzLCB0aGUgcmVxdWVzdCBpcyBkZW5pZWQuIiwKICAgICAgIml0ZW1zIjogewogICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgfQogICAgfSwKICAgICJ0cnVzdGVkX2lzc3VlcnMiOiB7CiAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgIml0ZW1zIjogewogICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgfQogICAgfSwKICAgICJhbGxvd2VkX2FsZ29yaXRobXMiOiB7CiAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgIml0ZW1zIjogewogICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgfQogICAgfSwKICAgICJqd2tzX3VybHMiOiB7CiAgICAgICJ0aXRsZSI6ICJKU09OIFdlYiBLZXkgVVJMcyIsCiAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgIml0ZW1zIjogewogICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgImZvcm1hdCI6ICJ1cmkiCiAgICAgIH0sCiAgICAgICJkZXNjcmlwdGlvbiI6ICJVUkxzIHdoZXJlIE9SWSBPYXRoa2VlcGVyIGNhbiByZXRyaWV2ZSBKU09OIFdlYiBLZXlzIGZyb20gZm9yIHZhbGlkYXRpbmcgdGhlIEpTT04gV2ViIFRva2VuLiBVc3VhbGx5IHNvbWV0aGluZyBsaWtlIFwiaHR0cHM6Ly9teS1rZXlzLmNvbS8ud2VsbC1rbm93bi9qd2tzLmpzb25cIi4gVGhlIHJlc3BvbnNlIG9mIHRoYXQgZW5kcG9pbnQgbXVzdCByZXR1cm4gYSBKU09OIFdlYiBLZXkgU2V0IChKV0tTKS5cblxuPklmIHRoaXMgYXV0aGVudGljYXRvciBpcyBlbmFibGVkLCB0aGlzIHZhbHVlIGlzIHJlcXVpcmVkLiIsCiAgICAgICJleGFtcGxlcyI6IFsKICAgICAgICAiaHR0cHM6Ly9teS13ZWJzaXRlLmNvbS8ud2VsbC1rbm93bi9qd2tzLmpzb24iLAogICAgICAgICJodHRwczovL215LW90aGVyLXdlYnNpdGUuY29tLy53ZWxsLWtub3duL2p3a3MuanNvbiIsCiAgICAgICAgImZpbGU6Ly9wYXRoL3RvL2xvY2FsL2p3a3MuanNvbiIKICAgICAgXQogICAgfSwKICAgICJzY29wZV9zdHJhdGVneSI6IHsKICAgICAgIiRyZWYiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9zY29wZV9zdHJhdGVneS5zY2hlbWEuanNvbiMiCiAgICB9LAogICAgInRva2VuX2Zyb20iOiB7CiAgICAgICJ0aXRsZSI6ICJUb2tlbiBGcm9tIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsb2NhdGlvbiBvZiB0aGUgdG9rZW4uXG4gSWYgbm90IGNvbmZpZ3VyZWQsIHRoZSB0b2tlbiB3aWxsIGJlIHJlY2VpdmVkIGZyb20gYSBkZWZhdWx0IGxvY2F0aW9uIC0gJ0F1dGhvcml6YXRpb24nIGhlYWRlci5cbiBPbmUgYW5kIG9ubHkgb25lIGxvY2F0aW9uIChoZWFkZXIgb3IgcXVlcnkpIG11c3QgYmUgc3BlY2lmaWVkLiIsCiAgICAgICJvbmVPZiI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiaGVhZGVyIgogICAgICAgICAgXSwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiaGVhZGVyIjogewogICAgICAgICAgICAgICJ0aXRsZSI6ICJIZWFkZXIiLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBoZWFkZXIgKGNhc2UgaW5zZW5zaXRpdmUpIHRoYXQgbXVzdCBjb250YWluIGEgdG9rZW4gZm9yIHJlcXVlc3QgYXV0aGVudGljYXRpb24uIEl0IGNhbid0IGJlIHNldCBhbG9uZyB3aXRoIHF1ZXJ5X3BhcmFtZXRlci4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJxdWVyeV9wYXJhbWV0ZXIiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJxdWVyeV9wYXJhbWV0ZXIiOiB7CiAgICAgICAgICAgICAgInRpdGxlIjogIlF1ZXJ5IFBhcmFtZXRlciIsCiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHF1ZXJ5IHBhcmFtZXRlciAoY2FzZSBzZW5zaXRpdmUpIHRoYXQgbXVzdCBjb250YWluIGEgdG9rZW4gZm9yIHJlcXVlc3QgYXV0aGVudGljYXRpb24uIEl0IGNhbid0IGJlIHNldCBhbG9uZyB3aXRoIGhlYWRlci4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0KICB9LAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "authenticators.noop.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRoZW50aWNhdG9ycy5ub29wLnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInRpdGxlIjogIk5vT3AgQXV0aGVudGljYXRvciBDb25maWd1cmF0aW9uIiwKICAiZGVzY3JpcHRpb24iOiAiVGhpcyBzZWN0aW9uIGlzIG9wdGlvbmFsIHdoZW4gdGhlIGF1dGhlbnRpY2F0b3IgaXMgZGlzYWJsZWQuIiwKICAicHJvcGVydGllcyI6IHsKICB9LAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "authenticators.oauth2_client_credentials.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRoZW50aWNhdG9ycy5vYXV0aDJfY2xpZW50X2NyZWRlbnRpYWxzLnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInRpdGxlIjogIk9BdXRoIDIuMCBDbGllbnQgQ3JlZGVudGlhbHMgQXV0aGVudGljYXRvciBDb25maWd1cmF0aW9uIiwKICAiZGVzY3JpcHRpb24iOiAiVGhpcyBzZWN0aW9uIGlzIG9wdGlvbmFsIHdoZW4gdGhlIGF1dGhlbnRpY2F0b3IgaXMgZGlzYWJsZWQuIiwKICAicHJvcGVydGllcyI6IHsKICAgICJ0b2tlbl91cmwiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgT0F1dGggMi4wIFRva2VuIEVuZHBvaW50IHRoYXQgd2lsbCBiZSB1c2VkIHRvIHZhbGlkYXRlIHRoZSBjbGllbnQgY3JlZGVudGlhbHMuXG5cbj5JZiB0aGlzIGF1dGhlbnRpY2F0b3IgaXMgZW5hYmxlZCwgdGhpcyB2YWx1ZSBpcyByZXF1aXJlZC4iLAogICAgICAiZm9ybWF0IjogInVyaSIsCiAgICAgICJleGFtcGxlcyI6IFsKICAgICAgICAiaHR0cHM6Ly9teS13ZWJzaXRlLmNvbS9vYXV0aDIvdG9rZW4iCiAgICAgIF0KICAgIH0sCiAgICAicmVxdWlyZWRfc2NvcGUiOiB7CiAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgInRpdGxlIjogIlJlcXVlc3QgUGVybWlzc2lvbnMgKFRva2VuIFNjb3BlKSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTY29wZXMgaXMgYW4gYXJyYXkgb2YgT0F1dGggMi4wIHNjb3BlcyB0aGF0IGFyZSByZXF1aXJlZCB3aGVuIGFjY2Vzc2luZyBhbiBlbmRwb2ludCBwcm90ZWN0ZWQgYnkgdGhpcyBydWxlLlxuIElmIHRoZSB0b2tlbiB1c2VkIGluIHRoZSBBdXRob3JpemF0aW9uIGhlYWRlciBkaWQgbm90IHJlcXVlc3QgdGhhdCBzcGVjaWZpYyBzY29wZSwgdGhlIHJlcXVlc3QgaXMgZGVuaWVkLiIsCiAgICAgICJpdGVtcyI6IHsKICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgIH0KICAgIH0KICB9LAogICJyZXF1aXJlZCI6IFsidG9rZW5fdXJsIl0sCiAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "authenticators.oauth2_introspection.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRoZW50aWNhdG9ycy5vYXV0aDJfaW50cm9zcGVjdGlvbi5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJ0aXRsZSI6ICJPQXV0aCAyLjAgSW50cm9zcGVjdGlvbiBBdXRoZW50aWNhdG9yIENvbmZpZ3VyYXRpb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGlzIHNlY3Rpb24gaXMgb3B0aW9uYWwgd2hlbiB0aGUgYXV0aGVudGljYXRvciBpcyBkaXNhYmxlZC4iLAogICJwcm9wZXJ0aWVzIjogewogICAgImludHJvc3BlY3Rpb25fdXJsIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogInVyaSIsCiAgICAgICJleGFtcGxlcyI6IFsKICAgICAgICAiaHR0cHM6Ly9teS13ZWJzaXRlLmNvbS9vYXV0aDIvaW50cm9zcGVjdGlvbiIKICAgICAgXSwKICAgICAgInRpdGxlIjogIk9BdXRoIDIuMCBJbnRyb3NwZWN0aW9uIFVSTCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgT0F1dGggMi4wIFRva2VuIEludHJvc3BlY3Rpb24gZW5kcG9pbnQgVVJMLlxuXG4&#43;SWYgdGhpcyBhdXRoZW50aWNhdG9yIGlzIGVuYWJsZWQsIHRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuIgogICAgfSwKICAgICJzY29wZV9zdHJhdGVneSI6IHsKICAgICAgIiRyZWYiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9zY29wZV9zdHJhdGVneS5zY2hlbWEuanNvbiMiCiAgICB9LAogICAgInByZV9hdXRob3JpemF0aW9uIjogewogICAgICAidGl0bGUiOiAiUHJlLUF1dGhvcml6YXRpb24iLAogICAgICAiZGVzY3JpcHRpb24iOiAiRW5hYmxlIHByZS1hdXRob3JpemF0aW9uIGluIGNhc2VzIHdoZXJlIHRoZSBPQXV0aCAyLjAgVG9rZW4gSW50cm9zcGVjdGlvbiBlbmRwb2ludCBpcyBwcm90ZWN0ZWQgYnkgT0F1dGggMi4wIEJlYXJlciBUb2tlbnMgdGhhdCBjYW4gYmUgcmV0cmlldmVkIHVzaW5nIHRoZSBPQXV0aCAyLjAgQ2xpZW50IENyZWRlbnRpYWxzIGdyYW50LiIsCiAgICAgICJvbmVPZiI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJlbmFibGVkIjogewogICAgICAgICAgICAgICJ0aXRsZSI6ICJFbmFibGVkIiwKICAgICAgICAgICAgICAiY29uc3QiOiBmYWxzZSwKICAgICAgICAgICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNsaWVudF9pZCIsCiAgICAgICAgICAgICJjbGllbnRfc2VjcmV0IiwKICAgICAgICAgICAgInRva2VuX3VybCIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImVuYWJsZWQiOiB7CiAgICAgICAgICAgICAgInRpdGxlIjogIkVuYWJsZWQiLAogICAgICAgICAgICAgICJjb25zdCI6IHRydWUsCiAgICAgICAgICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY2xpZW50X2lkIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgInRpdGxlIjogIk9BdXRoIDIuMCBDbGllbnQgSUQiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgT0F1dGggMi4wIENsaWVudCBJRCB0byBiZSB1c2VkIGZvciB0aGUgT0F1dGggMi4wIENsaWVudCBDcmVkZW50aWFscyBHcmFudC5cblxuPklmIHByZS1hdXRob3JpemF0aW9uIGlzIGVuYWJsZWQsIHRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiY2xpZW50X3NlY3JldCI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJ0aXRsZSI6ICJPQXV0aCAyLjAgQ2xpZW50IFNlY3JldCIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBPQXV0aCAyLjAgQ2xpZW50IFNlY3JldCB0byBiZSB1c2VkIGZvciB0aGUgT0F1dGggMi4wIENsaWVudCBDcmVkZW50aWFscyBHcmFudC5cblxuPklmIHByZS1hdXRob3JpemF0aW9uIGlzIGVuYWJsZWQsIHRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidG9rZW5fdXJsIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImZvcm1hdCI6ICJ1cmkiLAogICAgICAgICAgICAgICJ0aXRsZSI6ICJPQXV0aCAyLjAgVG9rZW4gVVJMIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIE9BdXRoIDIuMCBUb2tlbiBFbmRwb2ludCB3aGVyZSB0aGUgT0F1dGggMi4wIENsaWVudCBDcmVkZW50aWFscyBHcmFudCB3aWxsIGJlIHBlcmZvcm1lZC5cblxuPklmIHByZS1hdXRob3JpemF0aW9uIGlzIGVuYWJsZWQsIHRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuIgogICAgICAgICAgICB9LAogICAgICAgICAgICAic2NvcGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJ0aXRsZSI6ICJPQXV0aCAyLjAgU2NvcGUiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgT0F1dGggMi4wIFNjb3BlIHRvIGJlIHJlcXVlc3RlZCBkdXJpbmcgdGhlIE9BdXRoIDIuMCBDbGllbnQgQ3JlZGVudGlhbHMgR3JhbnQuIiwKICAgICAgICAgICAgICAiZXhhbXBsZXMiOiBbCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJbXCJmb29cIiwgXCJiYXJcIl0iCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgInJlcXVpcmVkX3Njb3BlIjogewogICAgICAidGl0bGUiOiAiUmVxdWlyZWQgU2NvcGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiQW4gYXJyYXkgb2YgT0F1dGggMi4wIHNjb3BlcyB0aGF0IGFyZSByZXF1aXJlZCB3aGVuIGFjY2Vzc2luZyBhbiBlbmRwb2ludCBwcm90ZWN0ZWQgYnkgdGhpcyBoYW5kbGVyLlxuIElmIHRoZSB0b2tlbiB1c2VkIGluIHRoZSBBdXRob3JpemF0aW9uIGhlYWRlciBkaWQgbm90IHJlcXVlc3QgdGhhdCBzcGVjaWZpYyBzY29wZSwgdGhlIHJlcXVlc3QgaXMgZGVuaWVkLiIsCiAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgIml0ZW1zIjogewogICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgfQogICAgfSwKICAgICJ0YXJnZXRfYXVkaWVuY2UiOiB7CiAgICAgICJ0aXRsZSI6ICJUYXJnZXQgQXVkaWVuY2UiLAogICAgICAiZGVzY3JpcHRpb24iOiAiQW4gYXJyYXkgb2YgYXVkaWVuY2VzIHRoYXQgYXJlIHJlcXVpcmVkIHdoZW4gYWNjZXNzaW5nIGFuIGVuZHBvaW50IHByb3RlY3RlZCBieSB0aGlzIGhhbmRsZXIuXG4gSWYgdGhlIHRva2VuIHVzZWQgaW4gdGhlIEF1dGhvcml6YXRpb24gaGVhZGVyIGlzIG5vdCBpbnRlbmRlZCBmb3IgYW55IG9mIHRoZSByZXF1ZXN0ZWQgYXVkaWVuY2VzLCB0aGUgcmVxdWVzdCBpcyBkZW5pZWQuIiwKICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAiaXRlbXMiOiB7CiAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICB9CiAgICB9LAogICAgInRydXN0ZWRfaXNzdWVycyI6IHsKICAgICAgInRpdGxlIjogIlRydXN0ZWQgSXNzdWVycyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdG9rZW4gbXVzdCBoYXZlIGJlZW4gaXNzdWVkIGJ5IG9uZSBvZiB0aGUgaXNzdWVycyBsaXN0ZWQgaW4gdGhpcyBhcnJheS4iLAogICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICJpdGVtcyI6IHsKICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgIH0KICAgIH0sCiAgICAidG9rZW5fZnJvbSI6IHsKICAgICAgInRpdGxlIjogIlRva2VuIEZyb20iLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGxvY2F0aW9uIG9mIHRoZSB0b2tlbi5cbiBJZiBub3QgY29uZmlndXJlZCwgdGhlIHRva2VuIHdpbGwgYmUgcmVjZWl2ZWQgZnJvbSBhIGRlZmF1bHQgbG9jYXRpb24gLSAnQXV0aG9yaXphdGlvbicgaGVhZGVyLlxuIE9uZSBhbmQgb25seSBvbmUgbG9jYXRpb24gKGhlYWRlciBvciBxdWVyeSkgbXVzdCBiZSBzcGVjaWZpZWQuIiwKICAgICAgIm9uZU9mIjogWwogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJoZWFkZXIiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJoZWFkZXIiOiB7CiAgICAgICAgICAgICAgInRpdGxlIjogIkhlYWRlciIsCiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGhlYWRlciAoY2FzZSBpbnNlbnNpdGl2ZSkgdGhhdCBtdXN0IGNvbnRhaW4gYSB0b2tlbiBmb3IgcmVxdWVzdCBhdXRoZW50aWNhdGlvbi5cbiBJdCBjYW4ndCBiZSBzZXQgYWxvbmcgd2l0aCBxdWVyeV9wYXJhbWV0ZXIuIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAicXVlcnlfcGFyYW1ldGVyIgogICAgICAgICAgXSwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAicXVlcnlfcGFyYW1ldGVyIjogewogICAgICAgICAgICAgICJ0aXRsZSI6ICJRdWVyeSBQYXJhbWV0ZXIiLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBxdWVyeSBwYXJhbWV0ZXIgKGNhc2Ugc2Vuc2l0aXZlKSB0aGF0IG11c3QgY29udGFpbiBhIHRva2VuIGZvciByZXF1ZXN0IGF1dGhlbnRpY2F0aW9uLlxuIEl0IGNhbid0IGJlIHNldCBhbG9uZyB3aXRoIGhlYWRlci4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0KICB9LAogICJyZXF1aXJlZCI6IFsKICAgICJpbnRyb3NwZWN0aW9uX3VybCIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "authenticators.unauthorized.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRoZW50aWNhdG9ycy51bmF1dGhvcml6ZWQuc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAidGl0bGUiOiAiVW5hdXRob3JpemVkIEF1dGhlbnRpY2F0b3IgQ29uZmlndXJhdGlvbiIsCiAgImRlc2NyaXB0aW9uIjogIlRoaXMgc2VjdGlvbiBpcyBvcHRpb25hbCB3aGVuIHRoZSBhdXRoZW50aWNhdG9yIGlzIGRpc2FibGVkLiIsCiAgInByb3BlcnRpZXMiOiB7CiAgfSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZQp9Cg==\&#34;")
	_ = packr.PackJSONBytes("schemas", "authorizers.allow.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRob3JpemVycy5hbGxvdy5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJ0aXRsZSI6ICJBbGxvdyBBdXRob3JpemVyIENvbmZpZ3VyYXRpb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGlzIHNlY3Rpb24gaXMgb3B0aW9uYWwgd2hlbiB0aGUgYXV0aG9yaXplciBpcyBkaXNhYmxlZC4iLAogICJwcm9wZXJ0aWVzIjogewogIH0sCiAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "authorizers.deny.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRob3JpemVycy5kZW55LnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInRpdGxlIjogIkRlbnkgQXV0aG9yaXplciBDb25maWd1cmF0aW9uIiwKICAiZGVzY3JpcHRpb24iOiAiVGhpcyBzZWN0aW9uIGlzIG9wdGlvbmFsIHdoZW4gdGhlIGF1dGhvcml6ZXIgaXMgZGlzYWJsZWQuIiwKICAicHJvcGVydGllcyI6IHsKICB9LAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "authorizers.keto_engine_acp_ory.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9hdXRob3JpemVycy5rZXRvX2VuZ2luZV9hY3Bfb3J5LnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInRpdGxlIjogIk9SWSBLZXRvIEFjY2VzcyBDb250cm9sIFBvbGljeSBBdXRob3JpemVyIENvbmZpZ3VyYXRpb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGlzIHNlY3Rpb24gaXMgb3B0aW9uYWwgd2hlbiB0aGUgYXV0aG9yaXplciBpcyBkaXNhYmxlZC4iLAogICJwcm9wZXJ0aWVzIjogewogICAgImJhc2VfdXJsIjogewogICAgICAidGl0bGUiOiAiQmFzZSBVUkwiLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogInVyaSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgYmFzZSBVUkwgb2YgT1JZIEtldG8uXG5cbj5JZiB0aGlzIGF1dGhvcml6ZXIgaXMgZW5hYmxlZCwgdGhpcyB2YWx1ZSBpcyByZXF1aXJlZC4iLAogICAgICAiZXhhbXBsZXMiOiBbCiAgICAgICAgImh0dHA6Ly9teS1rZXRvLyIKICAgICAgXQogICAgfSwKICAgICJyZXF1aXJlZF9hY3Rpb24iOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIKICAgIH0sCiAgICAicmVxdWlyZWRfcmVzb3VyY2UiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIKICAgIH0sCiAgICAic3ViamVjdCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgfSwKICAgICJmbGF2b3IiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIKICAgIH0KICB9LAogICJyZXF1aXJlZCI6IFsKICAgICJiYXNlX3VybCIsCiAgICAicmVxdWlyZWRfYWN0aW9uIiwKICAgICJyZXF1aXJlZF9yZXNvdXJjZSIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "config.schema.json", "\&#34;&#43;\&#34;")
	_ = packr.PackJSONBytes("schemas", "mutators.cookie.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9tdXRhdG9ycy5jb29raWUuc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAidGl0bGUiOiAiQ29va2llIE11dGF0b3IgQ29uZmlndXJhdGlvbiIsCiAgImRlc2NyaXB0aW9uIjogIlRoaXMgc2VjdGlvbiBpcyBvcHRpb25hbCB3aGVuIHRoZSBtdXRhdG9yIGlzIGRpc2FibGVkLiIsCiAgInJlcXVpcmVkIjogWyJjb29raWVzIl0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAiY29va2llcyI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogeyAidHlwZSI6ICJzdHJpbmciIH0KICAgIH0KICB9LAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "mutators.header.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9tdXRhdG9ycy5oZWFkZXIuc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAidGl0bGUiOiAiSGVhZGVyIE11dGF0b3IgQ29uZmlndXJhdGlvbiIsCiAgImRlc2NyaXB0aW9uIjogIlRoaXMgc2VjdGlvbiBpcyBvcHRpb25hbCB3aGVuIHRoZSBtdXRhdG9yIGlzIGRpc2FibGVkLiIsCiAgInJlcXVpcmVkIjogWyJoZWFkZXJzIl0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAiaGVhZGVycyI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogeyAidHlwZSI6ICJzdHJpbmciIH0KICAgIH0KICB9LAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "mutators.hydrator.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9tdXRhdG9ycy5oeWRyYXRvci5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJ0aXRsZSI6ICJIeWRyYXRvciBNdXRhdG9yIENvbmZpZ3VyYXRpb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGlzIHNlY3Rpb24gaXMgb3B0aW9uYWwgd2hlbiB0aGUgbXV0YXRvciBpcyBkaXNhYmxlZC4iLAogICJwcm9wZXJ0aWVzIjogewogICAgImFwaSI6IHsKICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAidXJsIgogICAgICBdLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAidXJsIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAidXJpIgogICAgICAgIH0sCiAgICAgICAgImF1dGgiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImJhc2ljIjogewogICAgICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgICAgICJ1c2VybmFtZSIsCiAgICAgICAgICAgICAgICAicGFzc3dvcmQiCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgInVzZXJuYW1lIjogewogICAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgInBhc3N3b3JkIjogewogICAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAicmV0cnkiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgIm51bWJlcl9vZl9yZXRyaWVzIjogewogICAgICAgICAgICAgICJ0eXBlIjogIm51bWJlciIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAwLAogICAgICAgICAgICAgICJkZWZhdWx0IjogMTAwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkZWxheV9pbl9taWxsaXNlY29uZHMiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDAsCiAgICAgICAgICAgICAgImRlZmF1bHQiOiAzCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJyZXF1aXJlZCI6IFsKICAgICJhcGkiCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZQp9Cg==\&#34;")
	_ = packr.PackJSONBytes("schemas", "mutators.id_token.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9tdXRhdG9ycy5pZF90b2tlbi5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJ0aXRsZSI6ICJJRCBUb2tlbiBNdXRhdG9yIENvbmZpZ3VyYXRpb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGlzIHNlY3Rpb24gaXMgb3B0aW9uYWwgd2hlbiB0aGUgbXV0YXRvciBpcyBkaXNhYmxlZC4iLAogICJyZXF1aXJlZCI6IFsiandrc191cmwiLCJpc3N1ZXJfdXJsIl0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAiY2xhaW1zIjogewogICAgICAidHlwZSI6ICJzdHJpbmciCiAgICB9LAogICAgImlzc3Vlcl91cmwiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJ0aXRsZSI6ICJJc3N1ZXIgVVJMIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlNldHMgdGhlIFwiaXNzXCIgdmFsdWUgb2YgdGhlIElEIFRva2VuLlxuXG4&#43;SWYgdGhpcyBtdXRhdG9yIGlzIGVuYWJsZWQsIHRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuIgogICAgfSwKICAgICJqd2tzX3VybCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImZvcm1hdCI6ICJ1cmkiLAogICAgICAidGl0bGUiOiAiSlNPTiBXZWIgS2V5IFVSTCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTZXRzIHRoZSBVUkwgd2hlcmUga2V5cyBzaG91bGQgYmUgZmV0Y2hlZCBmcm9tLiBTdXBwb3J0cyByZW1vdGUgbG9jYXRpb25zIChodHRwLCBodHRwcykgYXMgd2VsbCBhcyBsb2NhbCBmaWxlc3lzdGVtIHBhdGhzLlxuXG4&#43;SWYgdGhpcyBtdXRhdG9yIGlzIGVuYWJsZWQsIHRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuIiwKICAgICAgImV4YW1wbGVzIjogWwogICAgICAgICJodHRwczovL2ZldGNoLWtleXMvZnJvbS90aGlzL2xvY2F0aW9uLmpzb24iLAogICAgICAgICJmaWxlOi8vL2Zyb20vdGhpcy9hYnNvbHV0ZS9sb2NhdGlvbi5qc29uIiwKICAgICAgICAiZmlsZTovLy4uL2Zyb20vdGhpcy9yZWxhdGl2ZS9sb2NhdGlvbi5qc29uIgogICAgICBdCiAgICB9LAogICAgInR0bCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInRpdGxlIjogIkV4cGlyZSBBZnRlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTZXRzIHRoZSB0aW1lLXRvLWxpdmUgb2YgdGhlIEpTT04gV2ViIFRva2VuLiIsCiAgICAgICJwYXR0ZXJuIjogIl5bMC05XSsobnN8dXN8bXN8c3xtfGgpJCIsCiAgICAgICJkZWZhdWx0IjogIjFtIiwKICAgICAgImV4YW1wbGVzIjogWwogICAgICAgICIxaCIsCiAgICAgICAgIjFtIiwKICAgICAgICAiMzBzIgogICAgICBdCiAgICB9CiAgfSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZQp9Cg==\&#34;")
	_ = packr.PackJSONBytes("schemas", "mutators.noop.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9tdXRhdG9ycy5ub29wLnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInRpdGxlIjogIk5vT3AgTXV0YXRvciBDb25maWd1cmF0aW9uIiwKICAiZGVzY3JpcHRpb24iOiAiVGhpcyBzZWN0aW9uIGlzIG9wdGlvbmFsIHdoZW4gdGhlIG11dGF0b3IgaXMgZGlzYWJsZWQuIiwKICAicHJvcGVydGllcyI6IHsKICB9LAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authenticators.anonymous.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhlbnRpY2F0b3JzLmFub255bW91cy5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAiJHJlZiI6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vb3J5L29hdGhrZWVwZXIvdjAuMzIuMS1iZXRhLjEvLnNjaGVtYXMvY29uZmlnLnNjaGVtYS5qc29uIy9kZWZpbml0aW9ucy9jb25maWdBdXRoZW50aWNhdG9yc0Fub255bW91cyIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authenticators.cookie_session.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhlbnRpY2F0b3JzLmNvb2tpZV9zZXNzaW9uLnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICIkcmVmIjogImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9vcnkvb2F0aGtlZXBlci92MC4zMi4xLWJldGEuMS8uc2NoZW1hcy9jb25maWcuc2NoZW1hLmpzb24jL2RlZmluaXRpb25zL2NvbmZpZ0F1dGhlbnRpY2F0b3JzQ29va2llU2Vzc2lvbiIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authenticators.jwt.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhlbnRpY2F0b3JzLmp3dC5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAiJHJlZiI6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vb3J5L29hdGhrZWVwZXIvdjAuMzIuMS1iZXRhLjEvLnNjaGVtYXMvY29uZmlnLnNjaGVtYS5qc29uIy9kZWZpbml0aW9ucy9jb25maWdBdXRoZW50aWNhdG9yc0p3dCIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authenticators.noop.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhlbnRpY2F0b3JzLm5vb3Auc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRyZWYiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2NvbmZpZy5zY2hlbWEuanNvbiMvZGVmaW5pdGlvbnMvY29uZmlnQXV0aGVudGljYXRvcnNBbm9ueW1vdXMiCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authenticators.oauth2_client_credentials.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhlbnRpY2F0b3JzLm9hdXRoMl9jbGllbnRfY3JlZGVudGlhbHMuc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRyZWYiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2NvbmZpZy5zY2hlbWEuanNvbiMvZGVmaW5pdGlvbnMvY29uZmlnQXV0aGVudGljYXRvcnNPYXV0aDJDbGllbnRDcmVkZW50aWFscyIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authenticators.oauth2_introspection.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhlbnRpY2F0b3JzLm9hdXRoMl9pbnRyb3NwZWN0aW9uLnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICIkcmVmIjogImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9vcnkvb2F0aGtlZXBlci92MC4zMi4xLWJldGEuMS8uc2NoZW1hcy9jb25maWcuc2NoZW1hLmpzb24jL2RlZmluaXRpb25zL2NvbmZpZ0F1dGhlbnRpY2F0b3JzT2F1dGgySW50cm9zcGVjdGlvbiIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authenticators.unauthorized.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhlbnRpY2F0b3JzLnVuYXV0aG9yaXplZC5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAiJHJlZiI6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vb3J5L29hdGhrZWVwZXIvdjAuMzIuMS1iZXRhLjEvLnNjaGVtYXMvY29uZmlnLnNjaGVtYS5qc29uIy9kZWZpbml0aW9ucy9jb25maWdBdXRoZW50aWNhdG9yc0Fub255bW91cyIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authorizers.allow.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhvcml6ZXJzLmFsbG93LnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authorizers.deny.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhvcml6ZXJzLmRlbnkuc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/authorizers.keto_engine_acp_ory.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2F1dGhvcml6ZXJzLmtldG9fZW5naW5lX2FjcF9vcnkuc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRyZWYiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL2NvbmZpZy5zY2hlbWEuanNvbiMvZGVmaW5pdGlvbnMvY29uZmlnQXV0aG9yaXplcnNLZXRvRW5naW5lQWNwT3J5Igp9Cg==\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/mutators.cookie.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL211dGF0b3JzLmNvb2tpZS5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAiJHJlZiI6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vb3J5L29hdGhrZWVwZXIvdjAuMzIuMS1iZXRhLjEvLnNjaGVtYXMvY29uZmlnLnNjaGVtYS5qc29uIy9kZWZpbml0aW9ucy9jb25maWdNdXRhdG9yc0Nvb2tpZSIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/mutators.header.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL211dGF0b3JzLmhlYWRlci5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAiJHJlZiI6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vb3J5L29hdGhrZWVwZXIvdjAuMzIuMS1iZXRhLjEvLnNjaGVtYXMvY29uZmlnLnNjaGVtYS5qc29uIy9kZWZpbml0aW9ucy9jb25maWdNdXRhdG9yc0hlYWRlciIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/mutators.hydrator.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL211dGF0b3JzLmh5ZHJhdG9yLnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICIkcmVmIjogImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9vcnkvb2F0aGtlZXBlci92MC4zMi4xLWJldGEuMS8uc2NoZW1hcy9jb25maWcuc2NoZW1hLmpzb24jL2RlZmluaXRpb25zL2NvbmZpZ011dGF0b3JzSHlkcmF0b3IiCn0K\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/mutators.id_token.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL211dGF0b3JzLmlkX3Rva2VuLnNjaGVtYS5qc29uIiwKICAiJHNjaGVtYSI6ICJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMiLAogICIkcmVmIjogImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9vcnkvb2F0aGtlZXBlci92MC4zMi4xLWJldGEuMS8uc2NoZW1hcy9jb25maWcuc2NoZW1hLmpzb24jL2RlZmluaXRpb25zL2NvbmZpZ011dGF0b3JzSWRUb2tlbiIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "pipeline/mutators.noop.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL3YwLjMyLjEtYmV0YS4xLy5zY2hlbWFzL211dGF0b3JzLm5vb3Auc2NoZW1hLmpzb24iLAogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIKfQo=\&#34;")
	_ = packr.PackJSONBytes("schemas", "scope_strategy.schema.json", "\&#34;ewogICIkaWQiOiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL29yeS9vYXRoa2VlcGVyL21hc3Rlci8uc2NoZW1hcy9zY29wZV9zdHJhdGVneS5zY2hlbWEuanNvbiIsCiAgIiRzY2hlbWEiOiAiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNy9zY2hlbWEjIiwKICAidGl0bGUiOiAiU2NvcGUgU3RyYXRlZ3kiLAogICJ0eXBlIjogInN0cmluZyIsCiAgImVudW0iOiBbCiAgICAiaGllcmFyY2hpYyIsCiAgICAiZXhhY3QiLAogICAgIndpbGRjYXJkIiwKICAgICJub25lIgogIF0sCiAgImRlZmF1bHQiOiAibm9uZSIsCiAgImRlc2NyaXB0aW9uIjogIlNldHMgdGhlIHN0cmF0ZWd5IHZhbGlkYXRpb24gYWxnb3JpdGhtLiIKfQo=\&#34;")
}
